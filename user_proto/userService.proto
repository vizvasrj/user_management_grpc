syntax = "proto3";

package user;

option go_package = "src/user_proto";

service UserService {
    rpc GetUserById(GetUserByIdRequest) returns (User);
    rpc GetUsersByIds(GetUsersByIdsRequest) returns (Users);
    rpc SearchUsers(SearchUsersRequest) returns (Users);
}

message GetUserByIdRequest {
    int32 id = 1;
}

message GetUsersByIdsRequest {
    repeated int32 ids = 1;
}

// Enhanced SearchUsersRequest
message SearchUsersRequest {
    repeated SearchCriteria criteria = 1; // List of search criteria
}

// SearchCriteria message to define individual search conditions
message SearchCriteria {
    string field = 1; // Name of the field to search (e.g., "city", "married", etc.)
    string value = 2; // Value to match
    Operator operator = 3; // Operator for the criteria
    Range range_criteria = 4; // Range criteria 
}

// Enum for operators
enum Operator {
    EQ = 0;  // Equal to
    GT = 1;  // Greater than
    LT = 2;  // Less than
    GTE = 3; // Greater than or equal to
    LTE = 4; // Less than or equal to
    OR = 5;  // Logical OR 
    BETWEEN = 6; // Between
}

message Range {
    string start_value = 1; 
    string end_value = 2;
}


message User {
    int32 id = 1;
    string fname = 2;
    string city = 3;
    int64 phone = 4;
    float height = 5;
    bool married = 6;
}

message Users {
    repeated User users = 1;
}
